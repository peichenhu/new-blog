import{_ as n,c as s,o as a,a as o}from"./app.3ab88ceb.js";const f='{"title":"\u6570\u636E\u7C7B\u578B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7C7B\u578B\u5B9A\u4E49","slug":"\u7C7B\u578B\u5B9A\u4E49"},{"level":2,"title":"\u7C7B\u578B\u533A\u5206","slug":"\u7C7B\u578B\u533A\u5206"},{"level":2,"title":"\u7C7B\u578B\u62F7\u8D1D","slug":"\u7C7B\u578B\u62F7\u8D1D"},{"level":2,"title":"\u57FA\u672C\u5305\u88C5\u7C7B\u578B","slug":"\u57FA\u672C\u5305\u88C5\u7C7B\u578B"},{"level":2,"title":"\u7C7B\u578B\u77E5\u8BC6\u62D3\u5C55","slug":"\u7C7B\u578B\u77E5\u8BC6\u62D3\u5C55"},{"level":2,"title":"\u7C7B\u578B\u8F6C\u6362","slug":"\u7C7B\u578B\u8F6C\u6362"},{"level":2,"title":"","slug":""}],"relativePath":"article/JS/\u6570\u636E\u7C7B\u578B.md","lastUpdated":1636945164537}',t={},p=o(`__VP_STATIC_START__<h1 id="\u6570\u636E\u7C7B\u578B" tabindex="-1">\u6570\u636E\u7C7B\u578B <a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a></h1><h2 id="\u7C7B\u578B\u5B9A\u4E49" tabindex="-1">\u7C7B\u578B\u5B9A\u4E49 <a class="header-anchor" href="#\u7C7B\u578B\u5B9A\u4E49" aria-hidden="true">#</a></h2><p>JS \u4E2D\u7684\u53D8\u91CF\u662F\u5F31\u7C7B\u578B\u53EF\u4EE5\u4FDD\u5B58\u6240\u6709\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u5373\u53D8\u91CF\u6CA1\u6709\u7C7B\u578B\u800C\u503C\u6709\u7C7B\u578B\u3002\u6570\u636E\u7C7B\u578B\u5305\u62EC<code>\u57FA\u672C\u6570\u636E\u7C7B\u578B</code>\u548C<code>\u5F15\u7528\u6570\u636E\u7C7B\u578B</code>,\u53EF\u4EE5\u4F7F\u7528 <code>typeof</code> \u533A\u5206 (\u9664\u4E86 null\uFF0C\u5B83\u4F1A\u8FD4\u56DE object)\u3002</p><ul><li>\u57FA\u672C\u6570\u636E\u7C7B\u578B <code>6</code> \u4E2A\uFF1A<code>number/string/null/undefined/boolean/symbol</code></li><li>\u5F15\u7528\u6570\u636E\u7C7B\u578B <code>2</code> \u4E2A\uFF1A<code>object/function</code></li></ul><h2 id="\u7C7B\u578B\u533A\u5206" tabindex="-1">\u7C7B\u578B\u533A\u5206 <a class="header-anchor" href="#\u7C7B\u578B\u533A\u5206" aria-hidden="true">#</a></h2><ul><li>\u4F7F\u7528 <code>typeof *</code> \u533A\u5206\u57FA\u672C\u6570\u636E\u7C7B\u578B</li><li>\u4F7F\u7528 <code>a instanceof A</code> \u533A\u5206\u5F15\u7528\u6570\u636E\u7C7B\u578B (object/array/map/set \u90FD\u5C5E\u4E8E object)</li><li>\u4F7F\u7528 <code>Object.prototype.toString.call(*)</code> \u533A\u5206\u6240\u6709\u6570\u636E\u7C7B\u578B</li></ul><h2 id="\u7C7B\u578B\u62F7\u8D1D" tabindex="-1">\u7C7B\u578B\u62F7\u8D1D <a class="header-anchor" href="#\u7C7B\u578B\u62F7\u8D1D" aria-hidden="true">#</a></h2><ul><li>\u57FA\u672C\u7C7B\u578B\u8D4B\u503C\u90FD\u662F<code>\u503C\u4F20\u9012</code>\uFF0C\u4E0D\u5B58\u5728\u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D</li><li>\u5F15\u7528\u7C7B\u578B\u8D4B\u503C\u90FD\u662F<code>\u5F15\u7528\u4F20\u9012</code><ul><li><code>\u62F7\u8D1D</code>\u5C31\u662F\u521B\u5EFA\u5E76\u91CD\u5199\u65B0\u7684\u5F15\u7528\u4F20\u9012 <ul><li><code>\u6D45\u62F7\u8D1D</code>\u5C31\u662F\u5BF9<code>\u5355\u4E2A\u5F15\u7528\u7C7B\u578B\u7684\u521B\u5EFA\u5E76\u91CD\u5199\u65B0\u7684\u5F15\u7528\u4F20\u9012</code></li><li><code>\u6DF1\u62F7\u8D1D</code>\u5C31\u662F\u5BF9<code>\u5D4C\u5957\u5F15\u7528\u7C7B\u578B\u7684\u521B\u5EFA\u5E76\u91CD\u5199\u65B0\u7684\u5F15\u7528\u4F20\u9012</code></li></ul></li></ul></li></ul><h2 id="\u57FA\u672C\u5305\u88C5\u7C7B\u578B" tabindex="-1">\u57FA\u672C\u5305\u88C5\u7C7B\u578B <a class="header-anchor" href="#\u57FA\u672C\u5305\u88C5\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u57FA\u672C\u5305\u88C5\u7C7B\u578B(3)\uFF1A<code>Boolean</code> <code>Number</code> <code>String</code>, \u6BCF\u5F53\u8BFB\u53D6\u4E00\u4E2A\u57FA\u672C\u7C7B\u578B\u503C\u7684\u65F6\u5019\uFF0C\u540E\u53F0\u5C31\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5BF9\u5E94\u7684\u57FA\u672C\u5305\u88C5\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u4ECE\u800C\u8BA9\u6211\u4EEC\u80FD\u591F\u8C03\u7528\u4E00\u4E9B\u65B9\u6CD5\u6765\u64CD\u4F5C\u8FD9\u4E9B\u6570\u636E\u3002</p><p>\u5F15\u7528\u7C7B\u578B\u4E0E\u57FA\u672C\u5305\u88C5\u7C7B\u578B\u7684\u4E3B\u8981\u533A\u522B\u5C31\u662F\u5BF9\u8C61\u7684\u751F\u5B58\u671F</p><p>\u4F7F\u7528 new \u64CD\u4F5C\u7B26\u521B\u5EFA\u7684\u5F15\u7528\u7C7B\u578B\u7684\u5B9E\u4F8B\uFF0C\u5728\u6267\u884C\u6D41\u79BB\u5F00\u5F53\u524D\u4F5C\u7528\u57DF\u4E4B\u524D\u90FD\u4E00\u76F4\u4FDD\u5B58\u5728\u5185\u5B58\u4E2D\u3002\u800C\u81EA\u52A8\u521B\u5EFA\u7684\u57FA\u672C\u5305\u88C5\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5219\u53EA\u5B58\u5728\u4E8E\u4E00\u884C\u4EE3\u7801\u7684\u6267\u884C\u77AC\u95F4\uFF0C\u7136\u540E\u7ACB\u5373\u88AB\u9500\u6BC1\u3002\u8FD9\u610F\u5473\u7740\u6211\u4EEC\u4E0D\u80FD\u5728\u8FD0\u884C\u65F6\u4E3A\u57FA\u672C\u7C7B\u578B\u503C\u6DFB\u52A0\u5C5E\u6027\u548C\u65B9\u6CD5\u3002\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;1024&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token function">Number</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 24</span>
str<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span> <span class="token comment">// str \u9690\u5F0F\u8F6C\u6362 \u6210 \u57FA\u672C\u5305\u88C5\u7C7B\u578B\uFF0C\u8D4B\u503C str.color\uFF0C\u6267\u884C\u6210\u529F\u5E76\u7ACB\u5373\u9500\u6BC1 str.color</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  undefined\uFF0C\u8868\u660E str.color \u5DF2\u7ECF\u88AB\u9500\u6BC1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>

<span class="token comment">// \u4F7F\u7528 new \u6784\u9020\u51FD\u6570\u662F\u4E0D\u4E00\u6837\u7684\u3002</span>
<span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
str2<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// red</span>
</code></pre></div><h2 id="\u7C7B\u578B\u77E5\u8BC6\u62D3\u5C55" tabindex="-1">\u7C7B\u578B\u77E5\u8BC6\u62D3\u5C55 <a class="header-anchor" href="#\u7C7B\u578B\u77E5\u8BC6\u62D3\u5C55" aria-hidden="true">#</a></h2><p>JS \u4E2D\u7684\u5BF9\u8C61\u5206\u4E3A\u4E09\u7C7B\uFF1A</p><ol><li><code>\u5185\u7F6E\u5BF9\u8C61\uFF08\u9759\u6001\u5BF9\u8C61\uFF09</code>\uFF1Ajs \u672C\u8EAB\u5DF2\u7ECF\u5199\u597D\u7684\u5BF9\u8C61\uFF0C\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E0D\u9700\u8981\u5B9A\u4E49\u5B83\u3002</li><li><code>\u672C\u5730\u5BF9\u8C61\uFF08\u975E\u9759\u6001\u5BF9\u8C61\uFF09</code>\uFF1A\u5FC5\u987B <code>new</code> \u5B9E\u4F8B\u5316\u624D\u80FD\u4F7F\u7528\u5176\u65B9\u6CD5\u548C\u5C5E\u6027\u7684\u5C31\u662F\u672C\u5730\u5BF9\u8C61\u3002</li><li><code>\u5BBF\u4E3B\u5BF9\u8C61</code>\uFF1Ajs \u8FD0\u884C\u548C\u5B58\u6D3B\u7684\u5730\u65B9\uFF0C\u5B83\u7684\u751F\u6D3B\u73AF\u5883\u5C31\u662F DOM\uFF08\u6587\u6863\u5BF9\u8C61\u6A21\u5F0F\uFF09\u548C BOM\uFF08\u6D4F\u89C8\u5668\u5BF9\u8C61\u6A21\u5F0F\uFF09\u3002</li></ol><p>\u5177\u4F53\u662F\uFF1A</p><ul><li>JS \u5185\u7F6E\u5BF9\u8C61\u5206\u4E3A\uFF1A <ul><li>\u503C\u5C5E\u6027\u5BF9\u8C61: <code>Infinity</code> <code>NaN</code> <code>undefined</code> <code>globalThis</code></li><li>\u51FD\u6570\u5C5E\u6027\u5BF9\u8C61: <code>eval()</code> <code>uneval()</code> <code>isFinite()</code> <code>isNaN()</code> <code>parseFloat()</code> <code>parseInt()</code> <code>decodeURI()</code> <code>decodeURIComponent()</code> <code>encodeURI()</code> <code>encodeURIComponent()</code></li><li>\u57FA\u672C\u5BF9\u8C61: <code>Object</code> <code>Function</code> <code>Boolean</code> <code>Symbol</code></li><li>\u9519\u8BEF\u5BF9\u8C61: <code>Error</code> <code>AggregateError</code> <code>EvalError</code> <code>InternalError</code> <code>RangeError</code> <code>ReferenceError</code> <code>SyntaxError</code> <code>TypeError</code> <code>URIError</code></li><li>\u6570\u5B57\u548C\u65E5\u671F\u5BF9\u8C61: <code>Number</code> <code>BigInt</code> <code>Math</code> <code>Date</code></li><li>\u5B57\u7B26\u4E32\u5BF9\u8C61: <code>String</code> <code>RegExp</code></li><li>\u53EF\u7D22\u5F15\u7684\u96C6\u5408\u5BF9\u8C61: <code>Array</code></li><li>\u4F7F\u7528\u952E\u7684\u96C6\u5408\u5BF9\u8C61: <code>Map</code> <code>Set</code> <code>WeakMap</code> <code>WeakSet</code></li><li>\u7ED3\u6784\u5316\u6570\u636E\u5BF9\u8C61: <code>ArrayBuffer</code> <code>SharedArrayBuffer</code> <code>Atomics</code> <code>DataView</code> <code>JSON</code></li><li>\u63A7\u5236\u62BD\u8C61\u5BF9\u8C61: <code>Promise</code> <code>Generator</code> <code>GeneratorFunction</code> <code>AsyncFunction</code></li><li>\u53CD\u5C04\u5BF9\u8C61: <code>Reflect</code> <code>Proxy</code></li><li>\u56FD\u9645\u5316\u5BF9\u8C61: <code>Intl</code></li><li>WebAssembly \u5BF9\u8C61: <code>WebAssembly</code></li><li>\u5176\u4ED6: <code>arguments</code></li></ul></li><li>BOM \u5BF9\u8C61\u5206\u4E3A\uFF1A<code>Window</code> <code>Navigator</code> <code>Screen</code> <code>History</code> <code>Location</code> <code>Storage</code></li><li>DOM \u5BF9\u8C61\u5206\u4E3A\uFF1A<code>Document</code> <code>Element</code> <code>Attr</code> <code>NamedNodeMap</code> <code>Event</code> <code>Console</code> <code>CSSStyleDeclaration</code> <code>HTMLCollection</code></li></ul><h2 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1">\u7C7B\u578B\u8F6C\u6362 <a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a></h2><ul><li>\u9690\u5F0F\u8F6C\u6362</li></ul><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token operator">+</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token operator">-</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span> <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span> <span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
<span class="token comment">// boolean</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">NaN</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
</code></pre></div><ul><li>\u663E\u5F0F\u8F6C\u6362</li></ul><div class="language-js"><pre><code><span class="token comment">// \u4F7F\u7528 Number \u51FD\u6570\u57FA\u672C\u4E0A\u53EF\u4EE5\u8F6C\u6362\u6240\u6709\u7C7B\u578B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;houdunren&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//NaN</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//9</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//NaN</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//NaN</span>

<span class="token comment">// parseInt \u63D0\u53D6\u5B57\u7B26\u4E32\u5F00\u59CB\u53BB\u9664\u7A7A\u767D\u540E\u7684\u6570\u5B57\u8F6C\u4E3A\u6574\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;  99houdunren&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//99</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;18.55&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//18</span>

<span class="token comment">// parseFloat \u8F6C\u6362\u5B57\u7B26\u4E32\u4E3A\u6D6E\u70B9\u6570\uFF0C\u5FFD\u7565\u5B57\u7B26\u4E32\u524D\u9762\u7A7A\u767D\u5B57\u7B26\u3002</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;  99houdunren&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//99</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;18.55&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//18.55</span>

<span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>__VP_STATIC_END__`,24),c=[p];function e(l,u,k,i,r,d){return a(),s("div",null,c)}var g=n(t,[["render",e]]);export{f as __pageData,g as default};
